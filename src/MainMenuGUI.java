import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class MainMenuGUI
{
   private JPanel menuPanel;
   private JLabel logoLabel;
   private JList<Ingredient> ingredientJList;
   private JButton findButton;

   private List<Recipe> recipeList;

   public static void main(String[] args)
   {
      MainMenuGUI.createFrame();
   }

   /**
    * Creates JFrame that contains the main menu
    */
   public static void createFrame()
   {
      JFrame frame = new JFrame();
      frame.setContentPane(new MainMenuGUI().menuPanel);
      frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
      frame.pack();
      frame.setLocationRelativeTo(null);
      frame.setVisible(true);
   }

   public MainMenuGUI()
   {
      RecipeLoader recipeLoader = new RecipeLoader("recipes");
      recipeList = recipeLoader.getDirectory();
      $$$setupUI$$$();
      findButton.addActionListener(e -> {
         List<Ingredient> ingredients = ingredientJList.getSelectedValuesList();
         List<Recipe> possibleRecipes = new ArrayList<>();
         for (Recipe r : recipeList)
         {if (r.isPossible(ingredients)) {possibleRecipes.add(r);}}
         RecipeListGUI.createFrame(possibleRecipes);
      });
   }

   private void createUIComponents()
   {
      Map<Integer, Set<Ingredient>> sortedMap =
            IngredientFrequency.getSortedMap(recipeList);
      DefaultListModel<Ingredient> ingredientJListModel = new DefaultListModel<>();
      for (Integer freq : sortedMap.keySet())
      {
         for (Ingredient ing : sortedMap.get(freq))
         {ingredientJListModel.addElement(ing);}
      }
      ingredientJList = new JList<>(ingredientJListModel);
   }

   /**
    * Method generated by IntelliJ IDEA GUI Designer
    * >>> IMPORTANT!! <<<
    * DO NOT edit this method OR call it in your code!
    */
   private void $$$setupUI$$$()
   {
      createUIComponents();
      menuPanel = new JPanel();
      menuPanel.setLayout(new GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1,
            -1));
      logoLabel = new JLabel();
      logoLabel.setFont(new Font(logoLabel.getFont().getName(), logoLabel.getFont
            ().getStyle(), 24));
      logoLabel.setText("Smart Fridge");
      menuPanel.add(logoLabel, new GridConstraints(1, 1, 1, 2, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints
            .SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null,
            0, false));
      final JLabel label1 = new JLabel();
      label1.setText("Ingredients");
      menuPanel.add(label1, new GridConstraints(2, 1, 1, 1, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints
            .SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null,
            0, false));
      final Spacer spacer1 = new Spacer();
      menuPanel.add(spacer1, new GridConstraints(1, 0, 3, 1, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints
            .SIZEPOLICY_WANT_GROW, 1, new Dimension(10, -1), null, null, 0, false));
      final Spacer spacer2 = new Spacer();
      menuPanel.add(spacer2, new GridConstraints(1, 3, 3, 1, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints
            .SIZEPOLICY_WANT_GROW, 1, new Dimension(10, -1), null, null, 0, false));
      final Spacer spacer3 = new Spacer();
      menuPanel.add(spacer3, new GridConstraints(4, 0, 1, 4, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints
            .SIZEPOLICY_WANT_GROW, new Dimension(-1, 10), null, null, 0, false));
      final Spacer spacer4 = new Spacer();
      menuPanel.add(spacer4, new GridConstraints(0, 0, 1, 4, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints
            .SIZEPOLICY_WANT_GROW, new Dimension(-1, 10), null, null, 0, false));
      findButton = new JButton();
      findButton.setText("Find Recipes");
      menuPanel.add(findButton, new GridConstraints(3, 2, 1, 1, GridConstraints
            .ANCHOR_EAST, GridConstraints.FILL_NONE,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                  | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints
            .SIZEPOLICY_FIXED, null, null, null, 0, false));
      final JScrollPane scrollPane1 = new JScrollPane();
      menuPanel.add(scrollPane1, new GridConstraints(2, 2, 1, 1, GridConstraints
            .ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints
            .SIZEPOLICY_FIXED,
            GridConstraints.SIZEPOLICY_CAN_SHRINK
                  | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0,
            false));
      ingredientJList.setLayoutOrientation(0);
      scrollPane1.setViewportView(ingredientJList);
   }

   /** @noinspection ALL */
   public JComponent $$$getRootComponent$$$() { return menuPanel; }
}
